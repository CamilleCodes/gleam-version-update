#!/usr/bin/env bash

# This script is used to update the installed version of Gleam.
# It downloads the latest version of Gleam from the GitHub repository
# and installs it in the system, replacing the old version.
# The old version of Gleam is renamed to gleam-version.bak.
# It also checks the sha512 checksum of the downloaded file.

# Check for the presence of Gleam.
# If it is not found, then exit with an error message.
if ! command -v gleam >/dev/null 2>&1; then
    echo "gleam command could not be found"
    exit 1
fi

# Get the location of Gleam
gleam_bin=$(command -v gleam)

# Get the version of Gleam
gleam_version=$($gleam_bin --version | cut -d ' ' -f 2)

# Set the gleam_bin_dir variable to the parent directory of Gleam
gleam_bin_dir=$(dirname $gleam_bin)

echo "Checking for Gleam updates... ⭐"

# Download the info for the latest version of Gleam from the GitHub API
release_info=$(curl -s https://api.github.com/repos/gleam-lang/gleam/releases/latest)
release_version=$(echo "$release_info" |
    grep tag_name |
    cut -d '"' -f 4 |
    tr -d 'v')

echo "Current version of Gleam is $gleam_version"
echo "Latest version of Gleam is $release_version"

# Check if the release version is the same as the current version
if [ "$gleam_version" = "$release_version" ]; then
    echo -e "\nGleam is already up to date!"
    exit 0
fi

chip='x86_64'
os='linux'

# Get the download URL of the latest version of Gleam
release_url=$(echo "$release_info" |
    grep browser_download_url |
    cut -d '"' -f 4 |
    grep "${chip}.*${os}.*tar\.gz$")

# Get the SHA512 checksum URL of the latest version of Gleam
sha512_url=$(echo "$release_info" |
    grep browser_download_url |
    cut -d '"' -f 4 |
    grep "${chip}.*${os}.*tar\.gz.sha512$")


echo -e "\nDownloading Gleam version $release_version from\n$release_url"

# Store the filename from the URL in a variable
release_filename=$(basename $release_url)
sha512_filename=$(basename $sha512_url)

# Download the latest version of Gleam
wget -q --show-progress $release_url -O $release_filename

# Download the SHA12 checksum of the downloaded file
echo -e "\nDownloading SHA512 checksum from\n$sha512_url"
wget -q --show-progress $sha512_url -O $sha512_filename

# Calculate the SHA512 checksum of the downloaded file
calculated_checksum=$(sha512sum $release_filename | cut -d ' ' -f 1)
expected_checksum=$(cat $sha512_filename | cut -d ' ' -f 1)

# Check if the checksums match
if [ "$calculated_checksum" != "$expected_checksum" ]; then
    echo "\nChecksums do not match!"
    exit 1
fi

# Extract the downloaded file
tar -xzf $release_filename

# Check if the extracted file is executable
if [ ! -x gleam ]; then
    chmod +x gleam
fi

# Rename the old version of Gleam to gleam.bak
mv $gleam_bin $gleam_bin-v$gleam_version.bak

# Move the extracted Gleam binary to the gleam_bin_dir
mv gleam $gleam_bin_dir

# Remove the downloaded files
rm $release_filename $sha512_filename

# Get the version of Gleam
new_gleam_version=$($gleam_bin --version | cut -d ' ' -f 2)

# Check if the new version of Gleam is the same as the release version
if [ "$new_gleam_version" != "$release_version" ]; then
    echo -e "\nGleam was not updated successfully >.<"
    exit 1
fi

echo -e "\nGleam updated to version $release_version 🎉"
